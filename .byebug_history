exit
pic
URI.parse(mustache_request.user_info.image_url)
mustache_request.original_user_image = pic
mustache_request.original_user_image.url(:medium)
mustache_request.original_user_image.url
mustache_request.original_user_image
mustache_request.original_urser_image
mustache_request
c
mustache_request.user_info.image_url
json_response = parse(response.options[:response_body])
c
exit
      json_response = parse(response.options[:response_body])
json_response
response
exit
mustache_request.user_info = UserInfo.create(image_url: params)
mustache_request.user_info = UserInfo.create()
UserInfo.methods
mustache_request.user_info
exit
params[:text].start_with?('')
params[:text]
exit
params[:text].start_with('')
params[:text]
params
exit
"".starts_with?("me")
"".starts_with?("")
exit
ecit
exit
Typhoeus.get("https://avatars.slack-edge.com/2016-03-01/23827508289_8e0c5fc47896904c9086_512.jpg")
n
l=
uri_pic.port
uri_picport
uri_pic.path
uri_pic.host
uri_pic
exit
uri_pic
exit
current_user.decode_base64_image(stache_data)
current_user
current_user.decode_base64_image(stache_data)
stache_data = params['canvasImage']
params
exit
current_user.stached_user_image.s3_bucket
current_user.stached_user_image.methods
current_user.decode_base64_image(stache_data)
current_user.stached_user_image.url
current_user.stached_user_image
current_user.stached_user_image = stache_data
stache_data = params['canvasImage']
params
exit
params
current_user
current_user.decode_base64_image
exit
params
exit
params
exit
params
exit
params
exit
far.post_image("C0PQ0FVJ8")
far = SlackService.new(current_user)
c
exit
far.post_image("C0PQ0FVJ8")
far.list_channels['channels']
far.list_channels['channels'].count
far = SlackService.new(current_user)
c
exit
far.list_channels['channels'].count
far.list_channels['channels']
far.post_image('test-mustache')
far = SlackService.new(current_user)
c
exit
far.list_channels.count
far.list_channels
far = SlackService.new(current_user)
c
exit
far.list_channels
far = SlackService.new(current_user)
c
exit
current_user.token
far.list_channels
far = SlackService.new(current_user)
exit
faraday = SlackService.new(current_user)
f
f = SlackService.new(current_user)
exit
request.env['omniauth.auth']['creden
request.env['omniauth.auth']['credentials']
request.env['omniauth.auth']['provider']
request.env['omniauth.auth']['uid']
request.env['omniauth.auth']['extra']['user_info']['user']['profile']['real_name']
request.env['omniauth.auth']['extra']['user_info']['user']['profile']
request.env['omniauth.auth']['extra']['user_info']['user']['profile']['image_1024']
request.env['omniauth.auth']['extra']['user_info']['user']['profile']
request.env['omniauth.auth']['extra']['user_info']['user']
request.env['omniauth.auth']['extra']['user_info']['profile']
request.env['omniauth.auth']['extra']['user_info']['image_1024']
request.env['omniauth.auth']['extra']['user_info']
request.env['omniauth.auth']['extra']
request.env['omniauth.auth']['team_info']
request.env['omniauth.auth']['team__info']
request.env['omniauth.auth']['user_info']
request.env['omniauth.auth']['credentials']
request.env['omniauth.auth'][
request.env['omniauth.auth']['user_info']
request.env['omniauth.auth']['profile']
request.env['omniauth.auth']
request.env['omniauth.auth']['info']['image']
exit
request.env['omniauth.auth']['info']['image']
request.env['omniauth.auth']['info']
request.env['omniauth.auth']
exit
auth_hash
auth_hash['uid']
auth_hash.uid
auth_hash['credentials']['secret']
auth_hash['credentials']
auth_hash['credentials'
auth_hash
exit
auth_hash['credentials']['token']
auth_hash['credentials']
auth_hash['credentials]
auth_hash
exit
auth_hash['info']['image']
auth_hash['info']['location']
user.location = auth_hash['info']['location']
auth_hash['info']
auth_hash['uid']
auth_hash['provider']
auth_hash
c
request.env['omniauth.auth']
exit
request.env['omniauth.auth']['extra']['raw_info']['photos']
request.env['omniauth.auth']['extra']['raw_info']
request.env['omniauth.auth']['extra']['photos']
request.env['omniauth.auth']['extra']
request.env['omniauth.auth']['photos']
request.env['omniauth.auth']
exit
request.env['omniauth.auth']
exit
request.env['omniauth.auth']['extra']
request.env['omniauth.auth']
c
request.env['omniauth.auth']
exit
request.env['omniauth.auth']
exit
request.env['omniauth.auth']
c
request.env['omniauth.auth']
c
request.env['omniauth.auth']
c
exit
request.env['omniauth.auth']
